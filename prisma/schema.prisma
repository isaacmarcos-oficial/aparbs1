generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Coupon {
  id               String    @id @default(uuid())
  clientCode       String
  clientName       String
  orderNumber      String
  purchaseValue    Float
  cpf              String
  hasInstagramPost Boolean
  registrationDate DateTime
  isWinner         Boolean   @default(false)
  isActive         Boolean   @default(true)
  couponNumber     Int[]
  saleDate         DateTime
  campaignId       String?
  campaign         Campaign? @relation(fields: [campaignId], references: [id])

  @@index([orderNumber, clientCode])
}

model Campaign {
  id          String   @id @default(uuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  coupons     Coupon[]

  @@index([name])
}

model Partners {
  id   String @id @default(uuid())
  name String
  url  String
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  role      String
}

model Prize {
  id          String   @id
  name        String
  drawnNumber Int
  drawnAt     DateTime @default(now())
  couponId    String   @db.Uuid
  campaignId  String   @db.Uuid

  @@index([campaignId])
}

model TransportsRevenue {
  id            String   @id @default(uuid())
  date          String?
  osNumber      String?
  client        String?
  vehicle       String?
  plate         String?
  paymentMethod String
  amount        Float
  service       String?
  createdAt     DateTime @default(now())
}

model TransportsExpense {
  id            String   @id @default(uuid())
  date String?
  description String?
  category String?
  amount Float
  service String?
  createdAt     DateTime @default(now())
}